name: Swagger code generator and docker publish

on: 
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  generate:
   runs-on: ubuntu-latest
   steps:
    - uses: actions/checkout@main    
    - name: save_controllers
      run: cp server/swagger_server/controllers/*_controller.py . # save our implementation for later use
    - name: Swagger Codegen v3
      uses: ducksify/swagger-codegen-action@v3.0
      with:
        args: >
          generate 
          -i server/swagger_server/swagger/swagger.yaml 
          -l python-flask 
          -o server
    - name: restore controllers
      run: |
        echo saving generated controllers to controllers_new
        for filename in server/swagger_server/controllers/*_controller.py; # renaming file
        do
        mv "$filename" "$(echo "$filename" | sed s/_controller.py/_controller_template.py/)";
        done

        echo restoring controllers
        cp *_controller.py server/swagger_server/controllers/
        rm *_controller.py
        echo replacing dateutil version 
        sed -i 's/python_dateutil == 2.6.0/python_dateutil == 2.7.0/' server/requirements.txt # replace dateutil version. Error with UTP on 2.6.0
        sed -i 's/flask_testing==0.8.0/flask_testing==0.8.1/' server/test-requirements.txt 
        sed -i 's/envlist = py35/envlist = py36/' server/tox.ini
    - name: patch __main__.py
      if: always()
      run: |
        echo "patching __main__.py"
        patch server/swagger_server/__main__.py < server/__main__.patch
    - uses: stefanzweifel/git-auto-commit-action@v4 # commiting changes
          
  speedtest-service:
    runs-on: ubuntu-20.04
    needs: generate
    steps:
      - uses: actions/checkout@v2
    
      - name: Setup artifact content
        run: |
          mkdir gh-artifacts/
          mv Dockerfile gh-artifacts/
          mv server/ gh-artifacts/server/
          
          echo "artifactName=speedtest-balancer-$(cat VERSION).$GITHUB_RUN_NUMBER" > $GITHUB_ENV
      
      - name: Upload all server files to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.artifactName }}
          path: gh-artifacts/*
          
  publish-to-dockerhub:
    runs-on: ubuntu-20.04
    needs: speedtest-service
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup version variable
        run: echo "version=$(cat VERSION)" > $GITHUB_ENV
    
      - uses: actions/download-artifact@v2
        with:
          name: speedtest-balancer-${{ env.version }}.${{ github.run_number }}
          path: gh-artifacts

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./gh-artifacts
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/speedtest-balancer:${{ env.version }}
